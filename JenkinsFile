pipeline {
    agent {
        node {
            label 'master'
        }
    }
    triggers {
        GenericTrigger(
        genericVariables: [
            [ key: 'name', value: '$.data.name' ],
            [ key: 'location', value: '$.data.path' ]
            ],
            token: '123',
            printContributedVariables: true,
            printPostContent: true,
        )
    }
    options {
        buildDiscarder logRotator( 
                daysToKeepStr: '16', 
                numToKeepStr: '10'
        )
    }

    stages {
        
            stage('Setup Environment for APICTL') {
                steps {
                    sh '''#!/bin/bash
                    # Set source repo path
                    apictl set --vcs-source-repo-path /var/lib/jenkins/workspace/CICD-Dev_dev
                    # Set deployment repo path
                    apictl set --vcs-deployment-repo-path /var/lib/jenkins/workspace/CICD-Deploy_main

                    envs=$(apictl get envs --format "{{.Name}}")
                    if [ -z "$envs" ]; 
                    then 
                        echo "No environments configured. Setting the dev and prod environments.."
                        apictl add env dev --apim https://${APIM_HOST}:9443  -k
                        apictl add env prod --apim https://${APIM_HOST}:9444 -k
                    else
                        echo "Environments :"$envs
                        if [[ $envs != *"dev"* ]]; then
                        echo "Dev environment is not configured. Setting the dev environment.."
                        apictl add env dev --apim https://${APIM_DEV_HOST}:9443 -k
                        fi
                        if [[ $envs != *"prod"* ]]; then
                        echo "Prod environment is not configured. Setting the prod environment.."
                        apictl add env prod --apim https://${APIM_HOST}:9444 -k
                        fi
                    fi
                    '''
                }
            }

            stage('Deploy artifacts to dev environment') {
                steps {
                    sh '''#!/bin/bash
                    # Download the artifacts from the artifactory
                    cd /var/lib/jenkins/.wso2apictl/exported/apis
                    wget https://${ARTIFACTORY_HOST}/artifactory/${ARTIFACTORY_REPO}/$location

                    # Login to the dev environment
                    apictl login dev -u admin -p admin -k

                    # Deploy artifacts to dev environment
                    apictl vcs deploy -e dev -k
                    '''
                }
            }

            stage('Run tests') {
                steps {
                    sh '''#!/bin/bash 
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
                    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion     
                    testfiles=\$(find /var/lib/jenkins/workspace/CICD-Dev_dev/tests -iname "*.sh")
                    for i in \$testfiles ; do bash \$i; done
                    '''
                }    
            }

            stage('Deploy artifacts to prod environment') {
                steps {
                    sh '''
                    # Login to the prod environment
                    apictl login prod -u admin -p admin -k

                    # Deploy artifacts to prod environment
                    apictl vcs deploy -e prod -k
                    '''
                }
            }
        }

        post { 
            always { 
                sh '''
                # Logout from the dev environment
                apictl logout dev -k
                # Logout from the prod environment
                apictl logout prod -k
                '''
            }
        }
     
}